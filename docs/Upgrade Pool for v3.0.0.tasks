LEGEND:
  *NOTES:
   - @3 = Scheduled for Version 3.0.0
     - The updates for `@3` are changes that may break previous version

   - @2.* = changes should be compatible in any v2.* version of Pluma

--- ✄ -----------------------


Installation:
  ☐ Move migrating of database before saving user credentials

Blacksmith:
  ☐ add forge:module params
    _--plain_ : produces an empty module.

  ☐ add forge:controller params
    _--controller_ : (default) extends the generic controller.
    _--admin_ : extends the admin controller.
    _--public_ : extends the public controller.
    _--api_ : extends the api controller.

  ☐ add forge:api command
    - will produce:
      - API/Controllers/{ModuleName}Controller.php
      - API/routes/api.php

  ☐ @3 > Move ./blacksmith folder to ./consoles/Blacksmith
    - add to composer.json psr-4 entry: "Blacksmith\\": consoles/Blacksmith/
    - update namespaces that may break application

Frontend [Presentation Logic]:
  ☐ @critical | @3 > assets deployment
    - Find a solution to remove inline assets

  ☐ @critical | @3 > assets inclusions
    - find a better way to include assets to:
      ☐ avoid assets duplicate inclusion

  ☐ @3 > Have a frontend assets management system
    @pref bower
      - Make a gulpfile that iterates over given folders to look for bower.json, then installs them.

  ☐ @3 > Frontend-Backend Loose Coupling - refine decouple frontend from the backend

  ☐ @3 > remove all assets from Frontier Module and:
    ☐ do one of the following: ________
      * move assets to ./core/assets; or
      * Add a core module: Assets
    ☐ refactor assets() helper functions and related
      ☐ move the v() function inside the vuetify assets function helpers
    ☐ support atleast one library with folder structure:
      _./core/assets/vuetify/<files>_
      _./core/assets/bootstrap/<files>_
      _or if going for the moduled approach_
      _./core/submodules/Assets/lib/vuetify/<files>_
      _./core/submodules/Assets/lib/bootstrap/<files>_


Backend [Programming Logic]:
  ✔ Implement Composer-merge-plugin @done (Dec-05 2017 10:21AM)
    @link https://github.com/wikimedia/composer-merge-plugin
  ☐ @3 > Make the backend frontend-agnostic
  ☐ @3 > develop a Handler Class to manage Programming-Presentation Logic (a.k.a. Backend-Frontend data exchange)

--- ✄ -----------------------
Modules:

  Menu:
    ☐ Enable modules to add widgets to the menu generator, similar to wordpress

  User:
    * add attributes
      ☐ getAuthorAttribute
