(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["app"] = factory();
	else
		root["app"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_js__ = __webpack_require__(1);\nvar ls = window.localStorage;\n\n\n\nVue.mixin(__WEBPACK_IMPORTED_MODULE_0__api_js__[\"a\" /* default */]);\n\nvar app = new Vue({\n    el: '#application-root',\n    mixins: mixins,\n    data: function data() {\n        return {\n            dark: true, light: false,\n            rightsidebar: {\n                model: false\n            },\n            sidebar: {\n                floating: true,\n                mini: false,\n                drawer: true,\n                state: {\n                    model: 'Default'\n                },\n                states: ['Floating', 'Mini', 'Default']\n            },\n            alert: {\n                model: true,\n                mode: null\n            },\n            dialog: {\n                icon: null,\n                model: false,\n                yes: 'Confirm',\n                no: 'Cancel',\n                title: '',\n                description: '',\n                confirmHandler: function confirmHandler() {},\n                cancelHandler: function cancelHandler() {}\n            },\n            settings: {\n                fontsize: {\n                    default: 16,\n                    model: 14\n                }\n            },\n            menu: {\n                open: false\n            },\n            theme: {\n                avatar: 'transparent',\n                utilitybar: 'white',\n                colors: {\n                    items: [{ text: 'Default', value: 'theme--transparent', preview: 'transparent' }, { text: 'Dark', value: 'theme--dark', preview: 'black' }, { text: 'Avenger', value: 'theme--avenger', preview: 'red' }, { text: 'Eco', value: 'theme--eco success', preview: 'green' }]\n                }\n            }\n        };\n    },\n    mounted: function mounted() {\n        this.initLocalStorageData();\n    },\n\n    methods: {\n        setStorage: function setStorage(key, value) {\n            window.localStorage.setItem(key, value);\n        },\n        getStorage: function getStorage(key) {\n            return window.localStorage.getItem(key);\n        },\n        clearStorage: function clearStorage() {\n            localStorage.clear();\n        },\n        initLocalStorageData: function initLocalStorageData() {\n            this.settings.fontsize.model = this.getStorage('settings.fontsize') ? this.getStorage('settings.fontsize') : 16;\n\n            this.sidebar.drawer = this.getStorage('sidebar.drawer') === 'true';\n            this.sidebar.floating = this.getStorage('sidebar.floating') === 'true';\n            this.sidebar.mini = this.getStorage('sidebar.mini') === 'true';\n            this.sidebar.drawer = this.getStorage('sidebar.drawer') === 'true';\n        },\n        showDialog: function showDialog(meta) {\n            this.dialog.icon = meta.icon;\n            this.dialog.title = meta.title;\n            this.dialog.description = meta.description;\n            this.dialog.yes = meta.yes ? meta.yes : this.dialog.yes;\n            this.dialog.no = meta.no ? meta.no : this.dialog.no;\n            this.dialog.model = true;\n            var parent = this.dialog;\n\n            this.dialog.confirmHandler = function () {\n                if (typeof meta.confirmHandler !== \"undefined\") {\n                    meta.confirmHandler();\n                }\n\n                parent.model = false;\n            };\n\n            this.dialog.cancelHandler = function () {\n                if (typeof meta.cancelHandler !== \"undefined\") {\n                    meta.cancelHandler();\n                }\n\n                parent.model = false;\n            };\n        },\n        dotToObject: function dotToObject(key, value) {\n            var result = object = {};\n            var arr = key.split('.');\n            for (var i = 0; i < arr.length - 1; i++) {\n                object = object[arr[i]] = {};\n            }\n            object[arr[arr.length - 1]] = value;\n            return result;\n        },\n        submit: function submit(url, query) {\n            url = url.split('null').join(query);\n            this.target.submit();\n        },\n        route: function route(url, query) {\n            return url.split('null').join(query);\n            // window.location = url;\n        },\n        postResource: function postResource(url, query) {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                query = query ? query : {};\n                _this.$http.post(url, query).then(function (response) {\n                    var items = response.body;\n                    var total = response.body.total ? response.body.total : response.body.length;\n                    resolve({ items: items, total: total });\n                });\n            });\n        }\n    }\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data: function data() {\n        return {\n            dataset: {\n                pagination: {}\n            }\n        };\n    },\n\n    methods: {\n        api: function api() {\n            var self = this;\n            return {\n                search: function search(url, query, prefix) {\n                    return new Promise(function (resolve, reject) {\n                        query = query ? self.serialize(query) : self.serialize({});\n                        prefix = prefix ? prefix : '?';\n                        url = url + prefix + query;\n\n                        self.$http.get(url).then(function (response) {\n                            var items = response.body;\n                            var total = response.body.data.total ? response.body.data.total : response.body.total;\n\n                            resolve({ items: items, total: total });\n                        });\n                    });\n                },\n                get: function get(url, query, options, prefix) {\n                    return new Promise(function (resolve, reject) {\n                        query = query ? self.serialize(query) : self.serialize({});\n                        prefix = prefix ? prefix : '?';\n                        url = url + prefix + query;\n\n                        self.$http.get(url).then(function (response) {\n                            var items = response.body;\n                            var total = response.body.data.total ? response.body.data.total : response.body.total;\n\n                            resolve({ items: items, total: total });\n                        });\n                    });\n                },\n                post: function post(url, query) {\n                    return new Promise(function (resolve, reject) {\n                        self.$http.post(url, query).then(function (response) {\n                            var items = response.body;\n                            var total = response.body.total ? response.body.total : response.body.length;\n\n                            resolve({ items: items, total: total });\n                        });\n                    });\n                }\n            };\n        },\n        searchAPI: function searchAPI(url, query, prefix) {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                query = query ? _this.serialize(query) : _this.serialize({});\n                prefix = prefix ? prefix : '?';\n                url = url + prefix + query;\n\n                _this.$http.get(url).then(function (response) {\n                    var items = response.body;\n                    var total = response.body.data.total ? response.body.data.total : response.body.total;\n\n                    resolve({ items: items, total: total });\n                });\n            });\n        },\n        getAPI: function getAPI(url, query, options) {\n            var _this2 = this;\n\n            return new Promise(function (resolve, reject) {\n                var q = \"?d=\" + new Date().getYear();\n                query = query ? query : {};\n                for (var key in query) {\n                    if (_typeof(query[key]) !== 'object') {\n                        q += \"&\" + key + \"=\" + query[key];\n                    }\n                }\n                url = url + q;\n\n                _this2.$http.get(url).then(function (response) {\n                    var items = response.body;\n                    var total = response.body.data.total ? response.body.data.total : response.body.total;\n\n                    resolve({ items: items, total: total });\n                });\n            });\n        },\n        postAPI: function postAPI(url, query) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this3.$http.post(url, query).then(function (response) {\n                    var items = response.body;\n                    var total = response.body.total ? response.body.total : response.body.length;\n\n                    resolve({ items: items, total: total });\n                });\n            });\n        },\n        serialize: function serialize(obj, prefix) {\n            var str = [],\n                p;\n            for (p in obj) {\n                if (obj.hasOwnProperty(p)) {\n                    var k = prefix ? prefix + \"[\" + p + \"]\" : p,\n                        v = obj[p];\n                    str.push(v !== null && (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === \"object\" ? this.serialize(v, k) : encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n                }\n            }\n            return str.join(\"&\");\n        },\n        apiTest: function apiTest() {\n            return \"GET\";\n        }\n    }\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(0);


/***/ })
/******/ ]);
});